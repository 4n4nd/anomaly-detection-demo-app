---
apiVersion: v1
kind: Template
labels:
  teamplate: anomaly-detection-demo-app
metadata:
  name: anomaly-detection-demo
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ${APP_SERVICE_NAME}
      labels:
        app: ${APP_SERVICE_NAME}
        service: ${APP_SERVICE_NAME}

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_SERVICE_NAME}
      name: ${APP_SERVICE_NAME}
    spec:
      lookupPolicy:
        local: true
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: quay.io/${QUAY_REPO}/anomaly_detection_poc:latest
          referencePolicy:
            type: Local

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_SERVICE_NAME}
      name: ${APP_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${APP_SERVICE_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_SERVICE_NAME}
            deploymentconfig: ${APP_SERVICE_NAME}
        spec:
          containers:
            - name: ${APP_SERVICE_NAME}
              image: quay.io/hukhan/anomaly_detection_poc:latest
              imagePullPolicy: Always
              env:
                - name: ES_HOST_URL
                  value: ${ELASTICSEARCH_URL}
              ports:
                - containerPort: 8088
                  protocol: TCP

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_SERVICE_NAME}
        template: ${APP_SERVICE_NAME}-app
      name: ${APP_SERVICE_NAME}
    spec:
      ports:
        - name: 8088-tcp
          port: 8088
          protocol: TCP
          targetPort: 8088
      selector:
        deploymentconfig: ${APP_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_SERVICE_NAME}
      name: ${APP_SERVICE_NAME}
    spec:
      port:
        targetPort: 8088-tcp
      to:
        kind: Service
        name: ${APP_SERVICE_NAME}

parameters:
  - name: APP_SERVICE_NAME
    displayName: App service name
    value: anomaly-detection-demo
    required: true
  - name: QUAY_REPO
    displayName: Quay Repo Username or Organization
    value: humairak
    required: true
  - name: ELASTICSEARCH_URL
    displayName: Host URL for elasticsearch
    value: http://$(LAD_ELASTICSEARCH_SERVICE_SERVICE_HOST):$(LAD_ELASTICSEARCH_SERVICE_SERVICE_PORT)
    required: false
